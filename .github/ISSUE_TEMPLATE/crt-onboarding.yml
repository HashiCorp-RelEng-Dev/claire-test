# Team Name: team-rel-eng-test
name: CRT Onboarding
description: Submit an onboarding request
body:
  - type: input
    id: "repository_name"
    attributes:
      label: Repository Name
      description: What is the name of the repository that you would like to onboard?
    validations:
      required: true
  - type: input
    id: "repository_link"
    attributes:
      label: Link to Repository
      description: Link/URL to Repository
    validations:
      required: true

  - type: dropdown
    id: "repo_type"
    attributes:
      label: What type of repository is this? (Community Edition, Internal, or Enterprise?)
      multiple: false
      default: 0
      options:
        - "CE"
        - "INT"
        - "ENT"
    validations:
      required: true
  - type: textarea
    id: "release_approvers"
    attributes:
     label: Description
     description: Please include the github usernames that you would like to have added as release approvers
    validations:
      required: true
  - type: markdown
    attributes:
      value: |
        ---

  # Add a step here asking if they have a release approvers team already. If yes, skip if no, proceed with next box
  # Release Approvers name
  - type: checkboxes
    id: link
    attributes:
     label: What do you plan to release? Go Binaries, Docker Images, Redhat? 
     description: Please tick all the types of artifacts
     options:
      - label: Go Binaries
      - label: Docker Images
      - label: RedHat Images
      - label: Linux Packages

# TODO [CRT Onboarding Steps]: 
# Add repository name to the crt-orchestrator GitHub App
# give github-es-release-engineering gh team access to the repository requested
# Add above team to crt-workflows-common with write perms
# Create dockerhub repositories  (if they check the docker images)
# CRT Releases API scopes


# Add a note after issue has been created that once an engineer has completed the above steps, they 
# will tag the creator of the issue and let them know they need to add artifacts to their repository. 
